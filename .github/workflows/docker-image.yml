name: Docker CI/CD

on:
  push:
    branches: [ "main" ]

env:
  MONGO_USERNAME: ${{ secrets.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
  MONGO_DB_NAME: ${{ secrets.MONGO_DB_NAME }}
  PORT: ${{ secrets.PORT }}
  MONGO_PORT: ${{ secrets.MONGO_PORT }}
  MONGO_IP: ${{ secrets.MONGO_IP }}
  DO_S3_REGION: ${{ secrets.DO_S3_REGION }}
  DO_S3_ENDPOINT: ${{ secrets.DO_S3_ENDPOINT }}
  DO_S3_NAME: ${{ secrets.DO_S3_NAME }}
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
  ZOOM_MEETING_SDK_KEY: ${{ secrets.ZOOM_MEETING_SDK_KEY }}
  ZOOM_MEETING_SDK_SECRET: ${{ secrets.ZOOM_MEETING_SDK_SECRET }}
  ZOOM_S2S_ACCOUNT_ID: ${{ secrets.ZOOM_S2S_ACCOUNT_ID }}
  ZOOM_S2S_CLIENT_ID: ${{ secrets.ZOOM_S2S_CLIENT_ID }}
  ZOOM_S2S_CLIENT_SECRET: ${{ secrets.ZOOM_S2S_CLIENT_SECRET }}
  ZOOM_OWNER_EMAIL: ${{ secrets.ZOOM_OWNER_EMAIL }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and Push Docker Images
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile.prod
          push: true
          tags: mastermobo/tutor-finder:server-latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH client and sshpass
        run: sudo apt-get install -y openssh-client sshpass

      - name: Deploy Docker Stack 
        run: |
          sshpass -p ${{ secrets.ROOT_SSH_PASSWORD }} ssh -o StrictHostKeyChecking=no root@${{ secrets.DO_DROPLET_IP }} 'cd ~/app && git checkout main && git pull origin main && docker stack deploy -c docker-compose.yml -c docker-compose.prod.yml --prune mam'      
